---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linstor-scheduler-admission
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linstor-scheduler-admission
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linstor-scheduler-admission
subjects:
- kind: ServiceAccount
  name: linstor-scheduler-admission
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linstor-scheduler-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linstor-scheduler-admission
subjects:
- kind: ServiceAccount
  name: linstor-scheduler-admission
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linstor-scheduler-admission
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linstor-scheduler-admission
rules:
- apiGroups: [""]
  resources: ["pods", "persistentvolumeclaims", "persistentvolumes"]
  verbs: ["get"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["get", "update"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: linstor-scheduler-admission-create
  namespace: kube-system
spec:
  template:
    metadata:
      name: linstor-scheduler-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=linstor-scheduler-admission,linstor-scheduler-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=linstor-scheduler-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: linstor-scheduler-admission
---
apiVersion: batch/v1
kind: Job
metadata:
  name: linstor-scheduler-admission-patch
  namespace: kube-system
spec:
  template:
    metadata:
      name: linstor-scheduler-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=linstor-scheduler-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-validating=false
        - --patch-mutating=true
        - --secret-name=linstor-scheduler-admission
        - --patch-failure-policy=Ignore
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: linstor-scheduler-admission
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linstor-scheduler-admission
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: linstor-scheduler-admission
  template:
    metadata:
      labels:
        app.kubernetes.io/name: linstor-scheduler-admission
    spec:
      containers:
      - name: linstor-scheduler-admission
        image: quay.io/piraeusdatastore/linstor-scheduler-extender:v0.2.0
        imagePullPolicy: IfNotPresent
        command: ["/linstor-scheduler-admission"]
        args:
        - -scheduler=linstor
        - -tls-cert-file=/usr/local/certificates/cert
        - -tls-key-file=/usr/local/certificates/key
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      serviceAccountName: linstor-scheduler-admission
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: webhook-cert
        secret:
          secretName: linstor-scheduler-admission
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: linstor-scheduler-admission
---
apiVersion: v1
kind: Service
metadata:
  name: linstor-scheduler-admission
  namespace: kube-system
spec:
  selector:
    app.kubernetes.io/name: linstor-scheduler-admission
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linstor-scheduler-admission
webhooks:
- name: linstor-scheduler-admission.linbit.com
  rules:
  - apiGroups: [""]
    apiVersions: ["v1"]
    operations: ["CREATE"]
    resources: ["pods"]
    scope: "*"
  clientConfig:
    service:
      namespace: kube-system
      name: linstor-scheduler-admission
      path: "/mutate"
      port: 8080
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  failurePolicy: Ignore
